version: '2'
services:
  postgres:
    image: postgres:9.5
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=aljp_django_skeleton
      - POSTGRES_PASSWORD=guest
      - POSTGRES_USER=guest
    volumes:
      - /var/lib/postgresql/data:/var/lib/postgresql/data
  redis:
    image: redis
    ports:
      - "6379:6379"
  amqp:
    image: rabbitmq:3.6.1
    ports:
      - "5671:5671"
      - "5672:5672"
      - "4369:4369"
      - "25672:25672"
  web:
    build:
      context: .
      dockerfile: docker/django/Dockerfile
    command: bash -c "sleep 3 && python manage.py runserver 0.0.0.0:80"
    volumes:
      - .:/code
    ports:
      - "80:80"
      - "12546:12546"
    depends_on:
      - postgres
      - redis
      - amqp
      - mailcatcher
    links:
      - postgres:postgres
      - redis:redis
      - amqp:amqp
      - mailcatcher:mailcatcher
    env_file: .env
  celery:
    build:
      context: .
      dockerfile: docker/django/Dockerfile
    command: bash -c "sleep 3 && celery -A aljp_django_skeleton.celery worker -E -l info --concurrency=2"
    volumes:
      - .:/code
    depends_on:
      - postgres
      - redis
      - amqp
      - mailcatcher
    links:
      - postgres:postgres
      - redis:redis
      - amqp:amqp
      - mailcatcher:mailcatcher
    env_file: .env
    restart: always
  beat:
    build:
      context: .
      dockerfile: docker/django/Dockerfile
    command: bash -c "sleep 3 && celery -A aljp_django_skeleton.settings.celery beat"
    volumes:
      - .:/code
    depends_on:
      - postgres
      - redis
      - amqp
      - mailcatcher
    links:
      - postgres:postgres
      - redis:redis
      - amqp:amqp
      - mailcatcher:mailcatcher
    env_file: .env
    restart: always
  mailcatcher:
    image: schickling/mailcatcher
    ports:
      - "1025:1025"
      - "1080:1080"